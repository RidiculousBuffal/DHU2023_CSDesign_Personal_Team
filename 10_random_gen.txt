#include <bits/stdc++.h>
#include<random>
using namespace std;
bool check(int n){
    if(n == 2 || n == 3)
        return true;
    else{
        for(int i = 2; i <= sqrt(n); i++)//查看从2到(根号n)是否有它的因数
            if(n % i == 0)
                return false;
        return true;
    }
}
int main() {
    std::random_device rd;
    vector<int>primes;
    for(int i=1;i<=30000;i++)
    {
        if(check(i))
        {
            primes.push_back(i);
        }
    }
    std::uniform_int_distribution<int>gap(1,3);//一个增量

    std::mt19937_64 gen(rd()+time(0));
    int start=0;
    int k=40;//调用次数
    std::uniform_int_distribution<int>the_k(1,(k*(k-1))/2);
    cout<<k<<endl;
    while(k--)
    {
        cout<<primes[start]<<" ";
        start+=gap(gen);
    }
    cout<<endl;
    cout<<the_k(gen)<<endl;
    return 0;
}